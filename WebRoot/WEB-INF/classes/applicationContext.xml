<?xml version="1.0" encoding="UTF-8"?>
<!-- 引入命名空间所对应的Schema文件 -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd">
    <!-- 扫描类包，将标注Spring注解的类自动转化Bean,同时完成Bean的注入 -->
    <context:component-scan base-package="cn.mypandora.*" />

    <!-- *****************************数据库配置文件***************************** -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
            </list>
        </property>
    </bean>

    <!-- *****************************数据库连接***************************** -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${center.jdbc.driverClass}" />
        <property name="url" value="${center.jdbc.url}" />
        <property name="username" value="${center.jdbc.username}" />
        <property name="password" value="${center.jdbc.password}" />
    </bean>

    <!-- *****************************myBatis文件***************************** -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sessionFactory" />
    </bean>

    <!-- *****************************事务管理***************************** -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 可通过注解控制事务 -->
    <tx:annotation-driven />
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- *****************************日志***************************** -->
<!--     <bean id="myLogAspect" class="cn.mypandora.log.MyLogAspect"/> -->
<!--     <aop:config> -->
<!--         <aop:aspect ref="myLogAspect"> -->
<!--             <aop:pointcut id="logPointCut" expression="execution(* cn.mypandora..*(..))"/> -->
<!--             <aop:after pointcut-ref="logPointCut" method="doSuccessLog"/> -->
<!--         </aop:aspect> -->
<!--     </aop:config> -->

    <!-- *****************************验证码***************************** -->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <!--通过构造函数注入属性值 -->
                <constructor-arg type="java.util.Properties">
                    <props>
                        <!-- 验证码宽度 -->
                        <prop key="kaptcha.image.width">100</prop>
                        <!-- 验证码高度 -->
                        <prop key="kaptcha.image.height">40</prop>
                        <!-- 生成验证码内容范围 -->
                        <prop key="kaptcha.textproducer.char.string">0123456789</prop>
                        <!-- 验证码个数 -->
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <!-- 是否有边框 -->
                        <prop key="kaptcha.border">yes</prop>
                        <!-- 边框颜色 -->
                        <prop key="kaptcha.border.color">105,179,90</prop>
                        <!-- 边框厚度 -->
                        <prop key="kaptcha.border.thickness">1</prop>
                        <!-- 验证码字体颜色 -->
                        <prop key="kaptcha.textproducer.font.color">red</prop>
                        <!-- 验证码字体大小 -->
                        <prop key="kaptcha.textproducer.font.size">40</prop>
                        <!-- 验证码所属字体样式 -->
                        <prop key="kaptcha.textproducer.font.names">BKamrnBd</prop>
                        <!-- 干扰线颜色 -->
                        <prop key="kaptcha.noise.color">blue</prop>
                        <!-- 验证码文本字符间距 -->
                        <prop key="kaptcha.textproducer.char.space">3</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!-- *****************************spring-task定时任务***************************** -->
    <task:annotation-driven />
</beans>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.mypandora.system.service.BaseUserService">
    <cache type="org.mybatis.caches.cn.mypandora.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="3600"/><!--1 hour-->
        <property name="timeToLiveSeconds" value="3600"/><!--1 hour-->
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>
    <resultMap type="baseUser" id="baseUserMap">
        <result property="id" column="id"></result>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="salt" column="salt"></result>
        <result property="locked" column="locked"></result>
        <result property="realName" column="real_name"></result>
        <result property="email" column="email"></result>
        <result property="phone" column="phone"></result>
        <result property="mobile" column="mobile"></result>
        <result property="pictureUrl" column="picture_url"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
        <result property="lastIp" column="last_ip"></result>
        <result property="lastVisit" column="last_visit"></result>
        <result property="credit" column="credit"></result>
        <result property="createTime" column="create_time"></result>
        <result property="updateTime" column="update_time"></result>
    </resultMap>

    <resultMap type="HashMap" id="sexCount">
        <result property="key" column="sex"></result>
        <result property="value" column="sexCount"></result>
    </resultMap>

    <select id="hasMatchUser" resultMap="baseUserMap" parameterType="hashMap">
        select *
        from t_base_user
        where 1=1
        <if test="username!=null">
            and username = #{username}
        </if>
        <if test="password!=null">
            and password = #{password}
        </if>
        order by id desc
    </select>

    <select id="findUserByName" resultMap="baseUserMap" parameterType="string">
        select *
        from t_base_user
        where 1=1
        and username = #{username}
    </select>

    <insert id="add" parameterType="baseUser">
        <![CDATA[
            INSERT INTO t_base_user (
                username,
                password,
                salt,
                locked,
                real_name,
                email,
                phone,
                mobile,
                picture_url,
                sex,
                birthday,
                credit,
                last_ip,
                create_time,
                update_time
            ) VALUES (
                #{username, jdbcType=VARCHAR},
                #{password, jdbcType=VARCHAR},
                #{salt, jdbcType=VARCHAR},
                #{locked, jdbcType=NUMERIC},
                #{realName, jdbcType=VARCHAR},
                #{email, jdbcType=VARCHAR},
                #{phone, jdbcType=VARCHAR},
                #{mobile, jdbcType=VARCHAR},
                #{pictureUrl, jdbcType=VARCHAR},
                #{sex, jdbcType=NUMERIC},
                #{birthday},
                #{credit, jdbcType=NUMERIC},
                #{lastIp, jdbcType=VARCHAR},
                #{createTime},
                #{updateTime}
            )
        ]]>
        <selectKey resultType="long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <insert id="addBatch" parameterType="list">
        INSERT INTO t_base_user (
            user_name,
            password,
            real_name,
            email,
            phone,
            mobile,
            picture_url,
            sex,
            birthday,
            credits,
            last_ip,
            create_time,
            update_time
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (
                #{item.username, jdbcType=VARCHAR},
                #{item.password, jdbcType=VARCHAR},
                #{item.realName, jdbcType=VARCHAR},
                #{item.email, jdbcType=VARCHAR},
                #{item.phone, jdbcType=VARCHAR},
                #{item.mobile, jdbcType=VARCHAR},
                #{item.pictureUrl, jdbcType=VARCHAR},
                #{item.sex, jdbcType=NUMERIC},
                #{item.birthday},
                #{item.credits, jdbcType=NUMERIC},
                #{item.lastIp, jdbcType=VARCHAR},
                #{item.createTime},
                #{item.updateTime}
            )
        </foreach>
        <selectKey resultType="long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <delete id="delete">
        <![CDATA[
            DELETE from t_base_user
            WHERE id = #{id}
        ]]>
    </delete>

    <delete id="deleteBatch" parameterType="java.lang.reflect.Array">
        <![CDATA[
            DELETE from t_base_user
            WHERE id in
        ]]>
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="update" parameterType="baseUser">
        UPDATE  t_base_user
        <set>
            <if test="username!=null and username!=''">
                username=#{username, jdbcType=VARCHAR},
            </if>
            <if test="password!=null and password!=''">
                password=#{password, jdbcType=VARCHAR},
            </if>
            <if test="salt!=null and salt!=''">
                salt=#{salt, jdbcType=VARCHAR},
            </if>
            <if test="locked!=null and locked!=''">
                locked=#{locked, jdbcType=NUMERIC},
            </if>
            <if test="realName!=null and realName!=''">
                real_name=#{realName, jdbcType=VARCHAR},
            </if>
            <if test="email!=null and email!=''">
                email=#{email, jdbcType=VARCHAR},
            </if>
            <if test="pictureUrl!=null and pictureUrl!=''">
                picture_url=#{pictureUrl, jdbcType=VARCHAR},
            </if>
            <if test="credit!=null and credit!=''">
                credit=#{credit, jdbcType=NUMERIC},
            </if>
            <if test="lastIp!=null and lastIp!=''">
                last_ip=#{lastIp, jdbcType=VARCHAR},
            </if>
            <if test="birthday!=null and birthday!=''">
                birthday=#{birthday, jdbcType=DATE},
            </if>
            <if test="sex!=null and sex!=''">
                sex=#{sex, jdbcType=NUMERIC},
            </if>
            <if test="mobile!=null and mobile!=''">
                mobile=#{mobile, jdbcType=VARCHAR}
            </if>
        </set>
        WHERE   id = #{id, jdbcType=NUMERIC}
    </update>

    <update id="updateBatch" parameterType="list">
        update  t_base_user
        <set>
            <if test="password!=null and password!=''">
                password=#{password, jdbcType=VARCHAR},
            </if>
            <if test="credits!=null and credits!=''">
                credits=#{credits, jdbcType=NUMERIC},
            </if>
        </set>
        WHERE   id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
            #{item}
        </foreach>
    </update>

    <select id="findById" resultMap="baseUserMap" parameterType="long">
        select * from t_base_user
        where id = #{id}
    </select>

    <select id="findAll" resultMap="baseUserMap">
        SELECT *
        FROM t_base_user
        ORDER BY username
    </select>

    <select id="pageUsers" resultMap="baseUserMap">
        select * from t_base_user
        where 1=1
        <if test="username!=null and username!=''">
            AND username=#{username, jdbcType=VARCHAR}
        </if>
        <if test="password!=null and password!=''">
            AND password=#{password, jdbcType=VARCHAR}
        </if>
        <if test="salt!=null and salt!=''">
            AND salt=#{salt, jdbcType=VARCHAR}
        </if>
        <if test="locked!=null and locked!=''">
            AND locked=#{locked, jdbcType=NUMERIC}
        </if>
        <if test="realName!=null and realName!=''">
            AND real_name=#{realName, jdbcType=VARCHAR}
        </if>
        <if test="email!=null and email!=''">
            AND email=#{email, jdbcType=VARCHAR}
        </if>
        <if test="pictureUrl!=null and pictureUrl!=''">
            AND picture_url=#{pictureUrl, jdbcType=VARCHAR}
        </if>
        <if test="credit!=null and credit!=''">
            AND credit=#{credit, jdbcType=NUMERIC}
        </if>
        <if test="lastIp!=null and lastIp!=''">
            AND last_ip=#{lastIp, jdbcType=VARCHAR}
        </if>
        <if test="birthday!=null and birthday!=''">
            AND birthday=#{birthday, jdbcType=DATE}
        </if>
        <if test="sex!=null and sex!=''">
            AND sex=#{sex, jdbcType=NUMERIC}
        </if>
        <if test="mobile!=null and mobile!=''">
            AND mobile=#{mobile, jdbcType=VARCHAR}
        </if>
        <if test="sortName!=null">
            order by #{sortName} #{orderName}
        </if>
        <!--<foreach collection="ids" index="index" item="item" open="" separator="," close="">-->
        <!--#{item}-->
        <!--</foreach>-->

    </select>

    <!--<select id="findUserSexCount" resultType="hashMap" >-->
        <!--SELECT t.sex, COUNT(t.sex) sexCount-->
        <!--FROM t_base_user t-->
        <!--GROUP BY t.sex-->
    <!--</select>-->

    <select id="isExistsUserRole" resultType="integer" >
        SELECT COUNT(1)
        FROM t_base_user_role
        where user_id=#{userId, jdbcType=NUMERIC}
        and role_id=#{roleId, jdbcType=NUMERIC}
    </select>

    <insert id="correlationUserRole" parameterType="hashMap">
        insert into t_base_user_role(
            user_id,
            role_id
        )
        VALUES(
            #{userId, jdbcType=NUMERIC},
            #{roleId, jdbcType=NUMERIC}
        )
        <selectKey resultType="long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <delete id="uncorrelationUserRole" parameterType="hashMap">
        <![CDATA[
            delete from t_base_user_role
            where user_id=#{userId, jdbcType=NUMERIC}
            and role_id=#{roleId, jdbcType=NUMERIC}
        ]]>
    </delete>

    <select id="findRole" resultType="string" parameterType="string">
        SELECT r.role
        FROM t_base_user u,t_base_user_role ur,t_base_role r
        WHERE ur.user_id=u.id
        AND ur.role_id=r.id
        AND u.username=#{username}
    </select>

    <select id="findPermission" resultType="string" parameterType="string">
        SELECT p.permission
        FROM t_base_role_permission rp,t_base_permission p
        WHERE rp.role_id in (
        SELECT r.id
        FROM t_base_user u,t_base_user_role ur,t_base_role r
        WHERE ur.user_id=u.id AND ur.role_id=r.id AND u.username=#{username}) AND rp.permission_id=p.id
    </select>

</mapper>